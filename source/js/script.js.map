{"mappings":"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","sources":["<anon>","source/js/script.js","source/js/themeChanger.js","source/js/renderCountries.js","source/js/fetchCountryApi.js","source/js/countryMarkup.js","source/js/FullCountryMarkup.js"],"sourcesContent":["(() => {\n// Checking the theme\nconst $294dfe9c459208fb$var$userTheme = localStorage.getItem(\"theme\");\nconst $294dfe9c459208fb$var$systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\nconst $294dfe9c459208fb$export$599bae4492e2154b = ()=>{\n    if ($294dfe9c459208fb$var$userTheme === \"dark\" || !$294dfe9c459208fb$var$userTheme && $294dfe9c459208fb$var$systemTheme) document.documentElement.classList.add(\"dark\");\n};\nconst $294dfe9c459208fb$export$5ed123b0f7007c88 = ()=>{\n    if (document.documentElement.classList.contains(\"dark\")) {\n        document.documentElement.classList.remove(\"dark\");\n        localStorage.setItem(\"theme\", \"light\");\n        return;\n    }\n    document.documentElement.classList.add(\"dark\");\n    localStorage.setItem(\"theme\", \"dark\");\n};\n\n\n/**This is the refactored get countries function for REST COUNTRIES API */ const $2422ee44cec7d62b$export$177b3cab1aa338fe = async function(val) {\n    try {\n        const fetchUrl = val ? `https://restcountries.com/v3.1/name/${val}` : \"https://restcountries.com/v3.1/all\";\n        const response = await fetch(fetchUrl);\n        const data = await response.json();\n        return data;\n    } catch (err) {\n        alert(`Something went wrong \\u{1F611}`);\n        location.reload();\n    }\n};\nconst $2422ee44cec7d62b$export$ee369cefeee59546 = async function(region) {\n    try {\n        const response = await fetch(`https://restcountries.com/v3.1/region/${region}`);\n        const data = await response.json();\n        return data;\n    } catch (err) {\n        alert(`Something went wrong \\u{1F611}`);\n        location.reload();\n    }\n};\nconst $2422ee44cec7d62b$export$34a05f3acb61bd26 = async function(...codes) {\n    try {\n        const res = await fetch(`https://restcountries.com/v3.1/alpha?codes=${codes}`);\n        const data = await res.json();\n        return data;\n    } catch (err) {\n        alert(`Something went wrong \\u{1F611}`);\n        location.reload();\n    }\n};\n\n\n// this is the markup for the country\nconst $871d306b4f7413ac$export$b604376fc265c823 = function(data) {\n    let markuphtml;\n    return markuphtml = `\r\n\r\n     <div class=\"country\">\r\n              <div class=\"img-cont h-[12rem]\">\r\n                <img\r\n                  src=\"${data.flag}\"\r\n                  alt=\"${data.name}\"\r\n                  class=\"h-full w-full\"\r\n                />\r\n              </div>\r\n\r\n              <ul class=\"card-details-cont\">\r\n                <li class=\"card-head cursor-pointer\">${data.name}</li>\r\n                <li class=\"card-txt\">\r\n                  <span>Population :</span>\r\n                  <span class=\"value\">${data.population}</span>\r\n                </li>\r\n                <li class=\"card-txt\">\r\n                  <span>Region :</span>\r\n                  <span class=\"value\">${data.region}</span>\r\n                </li>\r\n                <li class=\"card-txt\">\r\n                  <span>Capital :</span>\r\n                  <span class=\"value\">${data.capital}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n  `;\n};\n\n\n// This will be the markup for fully rendered country\nconst $083eea5290cd73c0$var$returnBorderStr = function(data) {\n    // Check if the country name is an array\n    if (!Array.isArray(data.border)) return `<b class=\"border-link\">${data.border}</b>`;\n    else if (data.border.length > 1) return data.border.map((bd)=>`<b class=\"border-link\">${bd}</b>`).join(\" \");\n    else return \"\";\n};\nconst $083eea5290cd73c0$export$f4549aa824e6acd8 = function(data) {\n    let markup;\n    return markup = `\r\n      <div class=\"cont max-w-[100rem] w-[90%] mx-auto\">\r\n        <a href=\"index.html\" class=\"back-link mt-14 inline-block\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            class=\"ionicon inline-block\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"48\"\r\n              d=\"M244 400L100 256l144-144M120 256h292\"\r\n            />\r\n          </svg>\r\n          <span class=\"text-Dark-Blue dark:text-White\">Back</span></a\r\n        >\r\n        <div class=\"ct\">\r\n          <div class=\"full-country mt-28\">\r\n            <div class=\"c-cont md:flex md:justify-between  \">\r\n              <div class=\"imgCountry bg-White dark:bg-Very-Dark-Blue2  md:w-[50%]\">\r\n                <img src=\"${data.flag}\" alt=\"Kenya\" class=\"w-full h-full \" />\r\n              </div>\r\n              <div class=\"content p-10\">\r\n                <h2\r\n                  class=\"country-header font-extrabold text-4xl mb-8 text-Dark-Blue dark:text-White\"\r\n                >\r\n                 ${data.cName}\r\n                </h2>\r\n                <ul classs=\"md:w-[50%]\">\r\n                  <div class=\"ct flex justify-between flex-wrap gap-5\">\r\n                    <div class=\"items-1\">\r\n                      <li class=\"country-txt\">\r\n                        <span>Native Name :</span>\r\n                        <span class=\"value\">${data.cName}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Population :</span>\r\n                        <span class=\"value\">${data.population}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Region :</span> <span class=\"value\">${data.region}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\" class=\"country-txt\">\r\n                        <span>Subregion :</span>\r\n                        <span class=\"value\">${data.subregion}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Capital :</span>\r\n                        <span class=\"value\">${data.capital}</span>\r\n                      </li>\r\n                    </div>\r\n                    <div class=\"items-2\">\r\n                      <li class=\"country-txt\">\r\n                        <span>Top level Domain :</span>\r\n                        <span class=\"value\">${data.topleveldomain}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Currencies :</span>\r\n                        <span class=\"value\">${data.currency}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Languages :</span>\r\n                        <span class=\"value\">${data.language}</span>\r\n                      </li>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"bd mt-24\">\r\n                    <li class=\"country-txt\">\r\n                      <span class=\"inline-block md:mr-10 md:mb-5\">Border countries:</span>\r\n                      <span class=\"flex gap-3 flex-wrap\">\r\n                 \r\n                     ${$083eea5290cd73c0$var$returnBorderStr(data)}\r\n\r\n                      </span>\r\n                    </li>\r\n                  </div>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n  `;\n};\n\n\nconst $40e00d2a0f100706$var$parentEl1 = document.querySelector(\".countries-container\");\nconst $40e00d2a0f100706$export$4165fb36acc9d04 = async function() {\n    const countriesData = await (0, $2422ee44cec7d62b$export$177b3cab1aa338fe)();\n    $40e00d2a0f100706$var$parentEl1.innerHTML = \"\";\n    countriesData.forEach((country)=>{\n        // This represents the country object\n        const countryData = {\n            flag: country.flags.png,\n            name: country.name.common,\n            population: country.population.toLocaleString(),\n            region: country.region,\n            capital: country.capital\n        };\n        // Build the country markup\n        const markup = (0, $871d306b4f7413ac$export$b604376fc265c823)(countryData);\n        document.querySelector(\".countries-container\").insertAdjacentHTML(\"afterbegin\", markup);\n    });\n};\nconst $40e00d2a0f100706$export$722881325d277462 = async function(data) {\n    try {\n        const [dt] = await (0, $2422ee44cec7d62b$export$177b3cab1aa338fe)(data);\n        const countryData = {\n            flag: dt.flags.png,\n            name: dt.name.common,\n            population: dt.population.toLocaleString(),\n            region: dt.region,\n            capital: dt.capital\n        };\n        $40e00d2a0f100706$var$parentEl1.innerHTML = \"\";\n        // Build the markup\n        const markup = (0, $871d306b4f7413ac$export$b604376fc265c823)(countryData);\n        $40e00d2a0f100706$var$parentEl1.insertAdjacentHTML(\"afterbegin\", markup);\n    } catch (err) {\n        alert(`Something went wrong \\u{1F611}`);\n        location.reload();\n    }\n};\nconst $40e00d2a0f100706$export$786ab11a8867fb72 = async function(data) {\n    const countriesData = await (0, $2422ee44cec7d62b$export$ee369cefeee59546)(data);\n    $40e00d2a0f100706$var$parentEl1.innerHTML = \"\";\n    countriesData.forEach((country)=>{\n        // This represents the country object\n        const countryData = {\n            flag: country.flags.png,\n            name: country.name.common,\n            population: country.population.toLocaleString(),\n            region: country.region,\n            capital: country.capital\n        };\n        // Build the country markup\n        const markup = (0, $871d306b4f7413ac$export$b604376fc265c823)(countryData);\n        document.querySelector(\".countries-container\").insertAdjacentHTML(\"afterbegin\", markup);\n    });\n};\nconst $40e00d2a0f100706$export$be09e3a37409cf80 = async function(country) {\n    const parentEl3 = document.querySelector(\".main-content\");\n    const [data] = await (0, $2422ee44cec7d62b$export$177b3cab1aa338fe)(country);\n    // Getting the borders names\n    const countries = await (0, $2422ee44cec7d62b$export$34a05f3acb61bd26)(data.borders);\n    parentEl3.innerHTML = \"\";\n    let countryNames;\n    countries.length === 1 ? countryNames = countries[0].name.common : countryNames = countries.map((el)=>el.name.common);\n    // Currency\n    const [curr] = Object.values(data.currencies);\n    const countryData = {\n        flag: data.flags.png,\n        cName: data.name.common,\n        population: data.population.toLocaleString(),\n        region: data.region,\n        subregion: data.subregion,\n        topLevelDomain: data.tld,\n        currency: curr.name,\n        language: Object.entries(data.languages)[0],\n        capital: data.capital,\n        border: countryNames\n    };\n    const markup = (0, $083eea5290cd73c0$export$f4549aa824e6acd8)(countryData);\n    document.querySelector(\".main-content\").insertAdjacentHTML(\"afterbegin\", markup);\n};\n\n\n\"use strict\";\nconst $90e5b98734c1ee7b$var$themeBtn = document.querySelector(\".theme-toggle\");\n/**Change theme dark/light */ $90e5b98734c1ee7b$var$themeBtn.addEventListener(\"click\", (0, $294dfe9c459208fb$export$5ed123b0f7007c88));\n(0, $294dfe9c459208fb$export$599bae4492e2154b)();\n/**RENDER ALL COUNTRIES BY DEFAULT PAGE RELOAD */ (0, $40e00d2a0f100706$export$4165fb36acc9d04)();\n/**RENDER ONE COUNTRY */ const $90e5b98734c1ee7b$var$form = document.querySelector(\".form\");\n$90e5b98734c1ee7b$var$form.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    // Get the searched item\n    const countryVal = document.querySelector(\".search-input\").value;\n    // Render the country on the page\n    (0, $40e00d2a0f100706$export$722881325d277462)(countryVal);\n    // Empty out the input form field\n    document.querySelector(\".search-input\").value = \"\";\n});\n/**RENDER COUNTRIES BASED ON THE SELECTED FILTER ITEM */ const $90e5b98734c1ee7b$var$parentEl2 = document.querySelector(\".items-cont\");\n$90e5b98734c1ee7b$var$parentEl2.addEventListener(\"click\", async function(e) {\n    // Receive and select the item from the form NB NO VALIDATION HAS BEEN PERFORMED YET!!!\n    let filterVal;\n    if (e.target.classList.contains(\"opt\")) filterVal = e.target.textContent;\n    // Render the countries based on the selected filter item\n    (0, $40e00d2a0f100706$export$786ab11a8867fb72)(filterVal);\n});\n/**RENDER FULL PAGE ON A SEPARATE COUNTRY */ const $90e5b98734c1ee7b$var$parentEl1 = document.querySelector(\".countries-container\");\n$90e5b98734c1ee7b$var$parentEl1.addEventListener(\"click\", async function(e) {\n    let country;\n    if (e.target.classList.contains(\"card-head\")) country = e.target.textContent;\n    // Render the full country\n    (0, $40e00d2a0f100706$export$be09e3a37409cf80)(country);\n});\n\n})();\n//# sourceMappingURL=script.js.map\n","\"use strict\";\r\nimport { themeSwitch, themeCheck } from \"./themeChanger.js\";\r\nimport {\r\n  renderCountries,\r\n  renderCountry,\r\n  renderCountriesByRegion,\r\n  renderFullcountry,\r\n} from \"./renderCountries.js\";\r\n\r\nconst themeBtn = document.querySelector(\".theme-toggle\");\r\n\r\n/**Change theme dark/light */\r\nthemeBtn.addEventListener(\"click\", themeSwitch);\r\nthemeCheck();\r\n\r\n/**RENDER ALL COUNTRIES BY DEFAULT PAGE RELOAD */\r\nrenderCountries();\r\n\r\n/**RENDER ONE COUNTRY */\r\nconst form = document.querySelector(\".form\");\r\nform.addEventListener(\"submit\", function (e) {\r\n  e.preventDefault();\r\n  // Get the searched item\r\n  const countryVal = document.querySelector(\".search-input\").value;\r\n\r\n  // Render the country on the page\r\n  renderCountry(countryVal);\r\n\r\n  // Empty out the input form field\r\n  document.querySelector(\".search-input\").value = \"\";\r\n});\r\n\r\n/**RENDER COUNTRIES BASED ON THE SELECTED FILTER ITEM */\r\nconst parentEl2 = document.querySelector(\".items-cont\");\r\nparentEl2.addEventListener(\"click\", async function (e) {\r\n  // Receive and select the item from the form NB NO VALIDATION HAS BEEN PERFORMED YET!!!\r\n  let filterVal;\r\n  if (e.target.classList.contains(\"opt\")) {\r\n    filterVal = e.target.textContent;\r\n  }\r\n\r\n  // Render the countries based on the selected filter item\r\n  renderCountriesByRegion(filterVal);\r\n});\r\n\r\n/**RENDER FULL PAGE ON A SEPARATE COUNTRY */\r\nconst parentEl1 = document.querySelector(\".countries-container\");\r\nparentEl1.addEventListener(\"click\", async function (e) {\r\n  let country;\r\n  if (e.target.classList.contains(\"card-head\")) {\r\n    country = e.target.textContent;\r\n  }\r\n\r\n  // Render the full country\r\n  renderFullcountry(country);\r\n});\r\n","// Checking the theme\r\nconst userTheme = localStorage.getItem(\"theme\");\r\nconst systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n\r\nexport const themeCheck = () => {\r\n  if (userTheme === \"dark\" || (!userTheme && systemTheme)) {\r\n    document.documentElement.classList.add(\"dark\");\r\n  }\r\n};\r\n\r\n// Switching the theme from dark mode to light mode and vice versor\r\nexport const themeSwitch = () => {\r\n  if (document.documentElement.classList.contains(\"dark\")) {\r\n    document.documentElement.classList.remove(\"dark\");\r\n    localStorage.setItem(\"theme\", \"light\");\r\n    return;\r\n  }\r\n  document.documentElement.classList.add(\"dark\");\r\n  localStorage.setItem(\"theme\", \"dark\");\r\n};\r\n","import {\r\n  getCountriesAPI,\r\n  getCountryByRegion,\r\n  getcountryNamesByCode,\r\n} from \"./fetchCountryApi.js\";\r\nimport { countryMarkup } from \"./countryMarkup.js\";\r\nimport { markupFullCountry } from \"./FullCountryMarkup.js\";\r\n\r\nconst parentEl1 = document.querySelector(\".countries-container\");\r\n// Rendering all countries\r\nexport const renderCountries = async function () {\r\n  const countriesData = await getCountriesAPI();\r\n  parentEl1.innerHTML = \"\";\r\n\r\n  countriesData.forEach(country => {\r\n    // This represents the country object\r\n    const countryData = {\r\n      flag: country.flags.png,\r\n      name: country.name.common,\r\n      population: country.population.toLocaleString(),\r\n      region: country.region,\r\n      capital: country.capital,\r\n    };\r\n\r\n    // Build the country markup\r\n    const markup = countryMarkup(countryData);\r\n\r\n    document\r\n      .querySelector(\".countries-container\")\r\n      .insertAdjacentHTML(\"afterbegin\", markup);\r\n  });\r\n};\r\n\r\n// Rendering one country\r\nexport const renderCountry = async function (data) {\r\n  try {\r\n    const [dt] = await getCountriesAPI(data);\r\n\r\n    const countryData = {\r\n      flag: dt.flags.png,\r\n      name: dt.name.common,\r\n      population: dt.population.toLocaleString(),\r\n      region: dt.region,\r\n      capital: dt.capital,\r\n    };\r\n\r\n    parentEl1.innerHTML = \"\";\r\n\r\n    // Build the markup\r\n    const markup = countryMarkup(countryData);\r\n\r\n    parentEl1.insertAdjacentHTML(\"afterbegin\", markup);\r\n  } catch (err) {\r\n    alert(`Something went wrong 😑`);\r\n    location.reload();\r\n  }\r\n};\r\n\r\n// Rendering country based on filter region\r\nexport const renderCountriesByRegion = async function (data) {\r\n  const countriesData = await getCountryByRegion(data);\r\n  parentEl1.innerHTML = \"\";\r\n\r\n  countriesData.forEach(country => {\r\n    // This represents the country object\r\n    const countryData = {\r\n      flag: country.flags.png,\r\n      name: country.name.common,\r\n      population: country.population.toLocaleString(),\r\n      region: country.region,\r\n      capital: country.capital,\r\n    };\r\n\r\n    // Build the country markup\r\n    const markup = countryMarkup(countryData);\r\n\r\n    document\r\n      .querySelector(\".countries-container\")\r\n      .insertAdjacentHTML(\"afterbegin\", markup);\r\n  });\r\n};\r\n\r\n// Rendering full country with other specified details\r\nexport const renderFullcountry = async function (country) {\r\n  const parentEl3 = document.querySelector(\".main-content\");\r\n\r\n  const [data] = await getCountriesAPI(country);\r\n\r\n  // Getting the borders names\r\n  const countries = await getcountryNamesByCode(data.borders);\r\n\r\n  parentEl3.innerHTML = \"\";\r\n\r\n  let countryNames;\r\n  countries.length === 1\r\n    ? (countryNames = countries[0].name.common)\r\n    : (countryNames = countries.map(el => el.name.common));\r\n\r\n  // Currency\r\n  const [curr] = Object.values(data.currencies);\r\n\r\n  const countryData = {\r\n    flag: data.flags.png,\r\n    cName: data.name.common,\r\n    population: data.population.toLocaleString(),\r\n    region: data.region,\r\n    subregion: data.subregion,\r\n    topLevelDomain: data.tld,\r\n    currency: curr.name,\r\n    language: Object.entries(data.languages)[0],\r\n    capital: data.capital,\r\n    border: countryNames,\r\n  };\r\n\r\n  const markup = markupFullCountry(countryData);\r\n\r\n  document\r\n    .querySelector(\".main-content\")\r\n    .insertAdjacentHTML(\"afterbegin\", markup);\r\n};\r\n","/**This is the refactored get countries function for REST COUNTRIES API */\r\nexport const getCountriesAPI = async function (val) {\r\n  try {\r\n    const fetchUrl = val\r\n      ? `https://restcountries.com/v3.1/name/${val}`\r\n      : \"https://restcountries.com/v3.1/all\";\r\n    const response = await fetch(fetchUrl);\r\n    const data = await response.json();\r\n\r\n    return data;\r\n  } catch (err) {\r\n    alert(`Something went wrong 😑`);\r\n    location.reload();\r\n  }\r\n};\r\n\r\n// Getting countries by region\r\nexport const getCountryByRegion = async function (region) {\r\n  try {\r\n    const response = await fetch(\r\n      `https://restcountries.com/v3.1/region/${region}`\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (err) {\r\n    alert(`Something went wrong 😑`);\r\n    location.reload();\r\n  }\r\n};\r\n\r\n// Getting country by codes\r\nexport const getcountryNamesByCode = async function (...codes) {\r\n  try {\r\n    const res = await fetch(\r\n      `https://restcountries.com/v3.1/alpha?codes=${codes}`\r\n    );\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  } catch (err) {\r\n    alert(`Something went wrong 😑`);\r\n    location.reload();\r\n  }\r\n};\r\n","// this is the markup for the country\r\nexport const countryMarkup = function (data) {\r\n  let markuphtml;\r\n  return (markuphtml = `\r\n\r\n     <div class=\"country\">\r\n              <div class=\"img-cont h-[12rem]\">\r\n                <img\r\n                  src=\"${data.flag}\"\r\n                  alt=\"${data.name}\"\r\n                  class=\"h-full w-full\"\r\n                />\r\n              </div>\r\n\r\n              <ul class=\"card-details-cont\">\r\n                <li class=\"card-head cursor-pointer\">${data.name}</li>\r\n                <li class=\"card-txt\">\r\n                  <span>Population :</span>\r\n                  <span class=\"value\">${data.population}</span>\r\n                </li>\r\n                <li class=\"card-txt\">\r\n                  <span>Region :</span>\r\n                  <span class=\"value\">${data.region}</span>\r\n                </li>\r\n                <li class=\"card-txt\">\r\n                  <span>Capital :</span>\r\n                  <span class=\"value\">${data.capital}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n  `);\r\n};\r\n","// This will be the markup for fully rendered country\r\nconst returnBorderStr = function (data) {\r\n  // Check if the country name is an array\r\n  if (!Array.isArray(data.border)) {\r\n    return `<b class=\"border-link\">${data.border}</b>`;\r\n  } else if (data.border.length > 1) {\r\n    return data.border.map(bd => `<b class=\"border-link\">${bd}</b>`).join(\" \");\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport const markupFullCountry = function (data) {\r\n  let markup;\r\n  return (markup = `\r\n      <div class=\"cont max-w-[100rem] w-[90%] mx-auto\">\r\n        <a href=\"index.html\" class=\"back-link mt-14 inline-block\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            class=\"ionicon inline-block\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"48\"\r\n              d=\"M244 400L100 256l144-144M120 256h292\"\r\n            />\r\n          </svg>\r\n          <span class=\"text-Dark-Blue dark:text-White\">Back</span></a\r\n        >\r\n        <div class=\"ct\">\r\n          <div class=\"full-country mt-28\">\r\n            <div class=\"c-cont md:flex md:justify-between  \">\r\n              <div class=\"imgCountry bg-White dark:bg-Very-Dark-Blue2  md:w-[50%]\">\r\n                <img src=\"${data.flag}\" alt=\"Kenya\" class=\"w-full h-full \" />\r\n              </div>\r\n              <div class=\"content p-10\">\r\n                <h2\r\n                  class=\"country-header font-extrabold text-4xl mb-8 text-Dark-Blue dark:text-White\"\r\n                >\r\n                 ${data.cName}\r\n                </h2>\r\n                <ul classs=\"md:w-[50%]\">\r\n                  <div class=\"ct flex justify-between flex-wrap gap-5\">\r\n                    <div class=\"items-1\">\r\n                      <li class=\"country-txt\">\r\n                        <span>Native Name :</span>\r\n                        <span class=\"value\">${data.cName}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Population :</span>\r\n                        <span class=\"value\">${data.population}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Region :</span> <span class=\"value\">${\r\n                          data.region\r\n                        }</span>\r\n                      </li>\r\n                      <li class=\"country-txt\" class=\"country-txt\">\r\n                        <span>Subregion :</span>\r\n                        <span class=\"value\">${data.subregion}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Capital :</span>\r\n                        <span class=\"value\">${data.capital}</span>\r\n                      </li>\r\n                    </div>\r\n                    <div class=\"items-2\">\r\n                      <li class=\"country-txt\">\r\n                        <span>Top level Domain :</span>\r\n                        <span class=\"value\">${data.topleveldomain}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Currencies :</span>\r\n                        <span class=\"value\">${data.currency}</span>\r\n                      </li>\r\n                      <li class=\"country-txt\">\r\n                        <span>Languages :</span>\r\n                        <span class=\"value\">${data.language}</span>\r\n                      </li>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"bd mt-24\">\r\n                    <li class=\"country-txt\">\r\n                      <span class=\"inline-block md:mr-10 md:mb-5\">Border countries:</span>\r\n                      <span class=\"flex gap-3 flex-wrap\">\r\n                 \r\n                     ${returnBorderStr(data)}\r\n\r\n                      </span>\r\n                    </li>\r\n                  </div>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n  `);\r\n};\r\n"],"names":["$294dfe9c459208fb$var$userTheme","localStorage","getItem","$294dfe9c459208fb$var$systemTheme","window","matchMedia","matches","$2422ee44cec7d62b$export$177b3cab1aa338fe","val","fetchUrl","response","fetch","json","err","alert","location","reload","$2422ee44cec7d62b$export$ee369cefeee59546","region","$2422ee44cec7d62b$export$34a05f3acb61bd26","codes","res","$871d306b4f7413ac$export$b604376fc265c823","data","flag","name","population","capital","$40e00d2a0f100706$var$parentEl1","document","querySelector","$40e00d2a0f100706$export$4165fb36acc9d04","countriesData","innerHTML","forEach","country","markup","flags","png","common","toLocaleString","insertAdjacentHTML","$40e00d2a0f100706$export$722881325d277462","dt","countryData","$40e00d2a0f100706$export$786ab11a8867fb72","$40e00d2a0f100706$export$be09e3a37409cf80","countryNames","parentEl3","countries","borders","length","map","el","curr","Object","values","currencies","cName","subregion","topLevelDomain","tld","currency","language","entries","languages","border","topleveldomain","Array","isArray","bd","join","$90e5b98734c1ee7b$var$themeBtn","addEventListener","documentElement","classList","contains","remove","setItem","add","$90e5b98734c1ee7b$var$form","e","preventDefault","value","$90e5b98734c1ee7b$var$parentEl2","filterVal","target","textContent","$90e5b98734c1ee7b$var$parentEl1"],"version":3,"file":"script.js.map"}